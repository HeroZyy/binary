name: Build APK (Docker)

on:
  push:
    branches: [ main, master, develop ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🐳 Build APK with Docker
      run: |
        docker run --rm \
          -v "$PWD":/home/user/hostcwd \
          -w /home/user/hostcwd \
          kivy/buildozer:latest \
          buildozer android debug
    
    - name: 📤 Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: bin/*.apk
        retention-days: 30
    
    - name: 📊 APK Info
      run: |
        APK_FILE=$(find bin -name "*.apk" -type f | head -n 1)
        if [ -n "$APK_FILE" ]; then
          echo "✅ APK 打包成功！"
          echo "📦 文件: $(basename $APK_FILE)"
          echo "📏 大小: $(du -h $APK_FILE | cut -f1)"
        else
          echo "❌ 未找到 APK 文件"
          exit 1
        fi
    
    - name: 🚀 Create Release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: bin/*.apk
        body: |
          ## 📱 Auto Binarization Demo ${{ github.ref_name }}
          
          ### 下载
          APK 文件已附加在下方
          
          ### 功能
          - ✅ 图像二值化（one_step 算法）
          - ✅ OpenCV 支持
          - ✅ 自适应阈值处理
          - ✅ 阴影消除
          
          ### 安装
          1. 下载 APK
          2. 在 Android 设备上安装
          3. 允许未知来源
          4. 授予存储权限
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

